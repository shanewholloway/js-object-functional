{"version":3,"sources":["../code/index.jsy"],"names":["asObjectFunctionalClass","asFunctionalObjectOptions","asStateTransform","asFunctionalObject","updateObservable","stateActionDispatch","isObjectChanged","asDispatchCallbackPipeline","g_Observable","require","options","useInitialValue","initialValue","ObjectFunctional","Object","assign","transform","xform","after","concat","viewTransform","freeze","notify","xform_name","TypeError","view","key","keys","host","view_props","host_props","impl_props","Observable","observable","from","subscribe","bindObservable","defineAction","bindActionDeclarations","injectActions","_injectActions","__impl_proto__","value","create","getPrototypeOf","__view_proto__","defineProperties","props","bind","Symbol","dispatchAction","_asDispatchActionFunction","action","fnActionImpl","actionName","name","fnActionDispatch","actionArgs","defineProperty","configurable","asAction","set","__dispatch__","addObserver","update","_observerColl","current","initial","next","observer","slice","err","removeObserver","error","push","idx","indexOf","splice","initialState","isChanged","on_before","before","__dispatch_before__","on_error","__dispatch_error__","on_after","__dispatch_after__","on_finish","__dispatch_freeze__","on_freeze","undefined","initState","_init_state","state","changed","pre_state","tgt","ctx","apply","setPrototypeOf","shouldThrow","post_state","Error","constructor","Promise","reject","prev","callback","callback_name","Array","isArray","iterator","every","fn","arg1","arg2"],"mappings":"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","file":"index.js","sourcesContent":["const g_Observable = require('any-observable')\n//const g_Observable = 'undefined' !== typeof Observable ? Observable : require('any-observable')\n\nexport default asObjectFunctionalClass\n\nexport function asObjectFunctionalClass(...options) ::\n  if options.useInitialValue ::\n    return function(initialValue) ::\n      return asFunctionalObject(this, ...options, {initialValue})\n  else ::\n    return function() ::\n      return asFunctionalObject(this, ...options)\n\nexport const ObjectFunctional = asObjectFunctionalClass()\n\n// ---\n\nexport function asFunctionalObjectOptions(...options) ::\n  options = Object.assign({}, ...options)\n\n  if options.transform ::\n    const xform = asStateTransform(options.transform, 'transform')\n    options.after = [].concat @ options.after || [], xform\n\n  if options.viewTransform ::\n    const xform = asStateTransform(options.viewTransform, 'viewTransform')\n    options.freeze = [].concat @ options.freeze || [], xform\n\n  if null == options.notify ::\n    options.notify = updateObservable(options)\n\n  return options\n\n// ---\n\nexport function asStateTransform(xform, xform_name) ::\n  if 'function' !== typeof xform ::\n    throw new TypeError(`Expected ${xform_name}to be a function`)\n\n  return function (view) ::\n    for const key of Object.keys(view) ::\n      view[key] = xform @ view[key]\n\n// ---\n\nexport function asFunctionalObject(host, ...options) ::\n  options = asFunctionalObjectOptions(...options)\n\n  const notify = options.notify\n  const view_props = {}, host_props = {}, impl_props = {}\n  ::\n    const Observable = options.Observable || g_Observable\n    const observable = Observable.from(notify.observable || notify)\n    if null == observable || 'function' !== typeof observable.subscribe ::\n      throw new TypeError @ `Notify option is expected to be ES Observable compatible`\n\n    bindObservable(observable)\n\n  const defineAction = bindActionDeclarations @ notify\n  if options.injectActions ::\n    _injectActions(defineAction, options.injectActions)\n\n\n  host_props.__impl_proto__ = @{} value() ::\n    return Object.create @ Object.getPrototypeOf(host), impl_props\n\n  host_props.__view_proto__ = @{} value() ::\n    return Object.create @ Object.getPrototypeOf(host), view_props\n\n  Object.defineProperties @ host, host_props\n  return Object.freeze @ Object.create @ host\n\n\n  function bindObservable(observable) ::\n    for const props of [view_props, host_props, impl_props] ::\n      props.subscribe = @{} value: observable.subscribe.bind(observable)\n      props.observable = @{} value() :: return observable\n      if null != Symbol.observable ::\n        props[Symbol.observable] = props.observable\n\n  function bindActionDeclarations(notify) ::\n    const dispatchAction = _asDispatchActionFunction(host, options)\n    if 'function' !== typeof dispatchAction ::\n      throw new TypeError(`Expected a dispatchAction(notify, actionName, actionArgs){…} function`)\n\n    const defineAction = (action, fnActionImpl) => ::\n      const actionName = action.name\n      const fnActionDispatch = function (...actionArgs) ::\n        return dispatchAction(notify, actionName, actionArgs)\n\n      impl_props[actionName] = @{} value: fnActionImpl || action\n      view_props[actionName] = @{} value: fnActionDispatch\n      Object.defineProperty @ host, actionName,\n        @{} configurable: true, value: fnActionDispatch\n\n    host_props.asAction = @{} set: defineAction\n    return defineAction\n\n// ---\n\nfunction _asDispatchActionFunction(host, options) ::\n  if null != options.dispatchAction ::\n    return options.dispatchAction\n\n  if 'function' === typeof host.__dispatch__ ::\n    return function(notify, actionName, actionArgs) ::\n      return host.__dispatch__(notify, actionName, actionArgs)\n\n  return stateActionDispatch(host, options)\n\n// ---\n\nfunction _injectActions(defineAction, injectActions) ::\n  // allow injecting actions for time traveling debugging, etc.\n  for const name of Object.keys(injectActions) ::\n    const fnActionImpl = injectActions[name]\n    if 'function' !== typeof fnActionImpl ::\n      throw TypeError @ `Overlay action \"${name}\" expected function, not \"${typeof fnActionImpl}\"`\n\n    defineAction({name}, fnActionImpl)\n\n\n// ---\n\n\nexport function updateObservable(options={}) ::\n  ::\n    const Observable = options.Observable || g_Observable\n    const observable = new Observable(addObserver)\n    update.observable = observable\n    if Symbol.observable ::\n      Object.defineProperty @ update, Symbol.observable,\n        @{} value() :: return observable\n\n\n  const _observerColl = []\n  let current = options.initial\n  return update\n\n  function update(next) ::\n    current = next\n    for const observer of _observerColl.slice() ::\n      try :: observer.next(current)\n      catch err ::\n        removeObserver(observer)\n        observer.error(err)\n\n  function addObserver(observer) ::\n    _observerColl.push(observer)\n    observer.next(current)\n    return () => :: removeObserver(observer)\n\n  function removeObserver(observer) ::\n    const idx = _observerColl.indexOf(observer)\n    if idx < 0 :: return false\n    _observerColl.splice(idx, 1)\n    return true\n\n\n// ---\n\n\nexport function stateActionDispatch(host, options={}) ::\n  let initialState = options.initialState\n  const isChanged = options.isChanged || isObjectChanged\n  const on_before = asDispatchCallbackPipeline @ options.before || host.__dispatch_before__, 'before'\n  const on_error = asDispatchCallbackPipeline @ options.error || host.__dispatch_error__, 'error'\n  const on_after = asDispatchCallbackPipeline @ options.after || host.__dispatch_after__, 'after'\n  const on_finish = asDispatchCallbackPipeline @ options.freeze || host.__dispatch_freeze__, 'finish'\n  const on_freeze = asDispatchCallbackPipeline @ options.freeze || host.__dispatch_freeze__, 'freeze'\n\n  if undefined !== isChanged && 'function' !== typeof isChanged ::\n    throw new TypeError @ `Dispatch expected 'isChanged' option to be a function instance`\n\n  if 'function' !== typeof initialState ::\n    if 'function' === typeof host.initState ::\n      initialState = host => host.initState()\n    else ::\n      const _init_state = Object.assign @ {}, initialState\n      initialState = host => _init_state\n\n  let state = undefined\n  return __dispatch__\n\n  function __dispatch__(notify, actionName, actionArgs) ::\n    let changed\n    if undefined === state ::\n      state = initialState(host)\n      changed = true\n\n    const pre_state = state\n    const tgt = Object.create @ host.__impl_proto__()\n    Object.assign @ tgt, pre_state\n\n    const ctx = @: action: [actionName, actionArgs], pre_state\n    try ::\n      if undefined !== on_before ::\n        on_before(tgt, ctx)\n\n      try ::\n        // dispatch action method\n        tgt[actionName].apply(tgt, actionArgs)\n        // transform from impl down to a view\n        Object.setPrototypeOf(tgt, host.__view_proto__())\n\n      catch err ::\n        // transform from impl down to a view\n        Object.setPrototypeOf(tgt, host.__view_proto__())\n\n        // handle error from action method\n        if undefined === on_error :: throw err\n\n        const shouldThrow = on_error(err, tgt, ctx)\n        if false !== shouldThrow :: throw err\n\n      if undefined !== on_after ::\n        on_after(tgt, ctx)\n\n      // capture state after dispatching action\n      const post_state = Object.assign @ {}, tgt\n      ctx.post_state = post_state\n\n      if pre_state !== state ::\n        throw new Error @ `Async conflicting update of \"${host.constructor.name}\" occured`\n\n      changed = changed || isChanged(pre_state, post_state)\n      ctx.changed = changed\n      if changed ::\n        state = post_state\n\n      if undefined !== on_finish ::\n        on_finish(tgt, ctx)\n    finally ::\n      if undefined !== on_freeze ::\n        try ::\n          on_freeze(tgt, ctx)\n        catch err ::\n          Promise.reject(err)\n      Object.freeze(tgt)\n\n    if changed :: notify @ tgt\n    return tgt\n\n// ---\n\nexport function isObjectChanged(prev, next) ::\n  for const key of Object.keys(prev) ::\n    if prev[key] !== next[key] ::\n      return true\n\n  for const key of Object.keys(prev) ::\n    if ! @ key in prev ::\n      return true\n\n  return false\n\n// ---\n\nexport function asDispatchCallbackPipeline(callback, callback_name) ::\n  if null == callback :: return\n\n  if 'function' === typeof callback :: return callback\n\n  if Array.isArray(callback) || callback[Symbol.iterator] ::\n    callback = Array.from(callback)\n    if callback.every @ fn => 'function' === typeof fn ::\n      return (tgt, arg1, arg2) => ::\n        for const fn of callback ::\n          try :: fn(tgt, arg1, arg2)\n          catch err ::\n            Promise.reject(err)\n\n  throw new TypeError @ `Dispatch expected '${callback_name}' option to be a function instance or list of functions`\n\n"]}